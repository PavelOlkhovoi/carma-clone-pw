name: Manual E2E Runner with Docker

on:
  workflow_dispatch:
    inputs:
      project-name:
        description: 'Nx project name (e.g., x-and-ride)'
        required: true
        type: string

jobs:
  e2e:
    runs-on: self-hosted
    env:
      CI: true
      PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: '1'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Update submodules
        run: |
          git config --global --add safe.directory "${GITHUB_WORKSPACE}"
          git config --global --add safe.directory '*'
          git submodule sync --recursive
          git submodule update --init --remote --recursive

      - name: Configure npm cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Configure npm for GitHub packages
        run: |
          echo "@cismet-dev:registry=https://npm.pkg.github.com" >> ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> ~/.npmrc

      - name: Run E2E inside Playwright container
        run: |
          set -e
          docker run --rm --ipc=host \
            -e CI=1 \
            -e PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1 \
            -e GITHUB_TOKEN="${{ secrets.GITHUB_TOKEN }}" \
            -v "$PWD":"$PWD" -w "$PWD" \
            mcr.microsoft.com/playwright:v1.50.0-jammy \
            bash -lc '
              echo "//npm.pkg.github.com/:_authToken=${GITHUB_TOKEN}" >> ~/.npmrc && \
              echo "@cismet-dev:registry=https://npm.pkg.github.com" >> ~/.npmrc && \
              npm ci --prefer-offline --no-audit --no-fund && \
              npx nx e2e e2e-${{ github.event.inputs.project-name }} --skip-nx-cache --skipInstall
            '